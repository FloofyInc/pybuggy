{"version":3,"sources":["pages/Landing.jsx","pages/Dashboard.jsx","pages/Home.jsx","pages/Login.jsx","pages/Registration.jsx","pages/Logout.jsx","components/App/App.js","serviceWorker.js","index.js"],"names":["Landing","props","handleInputChange","event","target","value","name","setState","onSubmit","preventDefault","state","className","Component","Dashboard","chooseProblem","id","desc","code","output","creatingProblem","active","currentProblem","description","time","Date","canSubmit","runcount","currentAttempts","fetch","headers","then","res","status","json","data","curr","unescape","problemComplete","complete","attempts","catch","err","console","error","alert","createProblem","password","prompt","escape","method","body","JSON","stringify","defaultOutput","Error","log","window","location","reload","deleteProblem","submitCode","msg","studentMsg","onChangeCode","e","onPassword","onChangeTitle","onChangeDescription","onChangeConsole","runCode","timeDiff","seconds","Math","round","elapsedTime","isAdmin","problems","probs","forEach","p","this","map","item","variant","key","disabled","onClick","pill","placeholder","mode","theme","onLoad","onChange","fontSize","showPrintMargin","showGutter","highlightActiveLine","height","width","wrapEnabled","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","readOnly","Control","type","as","rows","withRouter","Home","isLoggedIn","loading","firstname","lastname","parentSet","page","Login","login","history","push","setName","setAdmin","user","loginForm","required","Registration","email","username","Logout","document","cookie","logout","App","isLoaded","items","refreshed","bind","loginButton","to","exact","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa7a8993.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"./style/Home.css\";\n\nclass Landing extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            \n        };\n    }\n\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    componentDidMount() {\n        \n        \n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n\n            <div className=\"page\">\n                LANDING PAGE\n            </div>\n        );\n      }\n    \n}\n\nexport default Landing;","import React, { Component } from 'react';\n\nimport { withRouter } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Badge from 'react-bootstrap/Badge'\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/theme-github\";\n\nimport \"./style/Home.css\";\nimport \"./style/Dashboard.css\";\n\nclass Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAdmin: false,\n            problems: [],\n            error: false,\n            active:'',\n            currentProblem:{\n                name:'',\n                description: '',\n                code:''\n            },\n            output:'',\n            currentAttempts:0,\n            creatingProblem: false,\n            canSubmit: false,\n            password: '',\n            time: 0,\n            problemComplete: false,\n            runcount : 0\n        };\n    }\n\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    componentDidMount() {\n        fetch('/api/problems', {\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                return res.json()\n            } else {\n                this.setState({\n                    error:true\n                });\n            }\n        })\n        .then(data => {\n            var probs = data.data;\n            probs.forEach(p => p.code = unescape(p.code));\n\n            this.setState({problems:probs});\n        })\n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n        \n        fetch('/api/checkToken', {\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                \n                return res.json();\n            }\n        })\n        .then(data => {\n            if (data) {\n                this.setState({isAdmin: data.isAdmin});\n            }\n            \n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n    }\n\n    chooseProblem = (id, name, desc, code, output, creatingProblem) => {\n        this.setState({\n            active:id, \n            currentProblem:{\n                name:name,\n                description:desc,\n                code:code\n            },\n            creatingProblem: creatingProblem,\n            time: new Date(),\n            canSubmit:false,\n            runcount:0,\n            currentAttempts:0,\n            output:output\n        });\n\n        fetch('/api/user/data/' + id, {\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            }\n        })\n        .then(data => {\n            if (data.data != null) {\n                var curr = this.state.currentProblem;\n                curr.code = unescape(data.data.code);\n                this.setState({currentProblem: curr, problemComplete: data.data.complete, currentAttempts:data.data.attempts, output: unescape(data.data.output)});\n            }\n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n    }\n\n    createProblem = () => {\n        if (this.state.canSubmit) {\n\n            var password = prompt(\"Enter your password\");\n            var code = this.state.currentProblem.code;\n            code = escape(code);\n\n            fetch('/api/problems', {\n                method: 'POST',\n                body: JSON.stringify({\n                    name: this.state.currentProblem.name,\n                    description: this.state.currentProblem.description,\n                    code: code,\n                    password:password,\n                    defaultOutput: this.state.output\n                }),\n                headers: {\n                    'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    return res.json();\n                } else {\n                    const error = new Error(res.error);\n                    throw error;\n                }\n            })\n            .then(data => {\n                console.log(data);\n                window.location.reload();\n            }) \n            .catch(err => {\n                console.error(err);\n                alert('Error logging in please try again');\n            });\n        }\n        else {\n            alert(\"Run your code first!\");\n        }\n    }\n\n    deleteProblem = (id) => {\n        var password = prompt(\"Enter your password\");\n        fetch('/api/problems', {\n            method: 'DELETE',\n            body: JSON.stringify({id:id, password:password}),\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            } else {\n                console.log(res);\n                const error = new Error(res.error);\n                throw error;\n            }\n        })\n        .then(data => {\n            console.log(data);\n            window.location.reload();\n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error logging in please try again');\n        });\n    }\n\n    submitCode = (id) => {\n        if (this.state.canSubmit) {\n            var msg = prompt(\"Explanation...\");\n            var code = this.state.currentProblem.code;\n            code = escape(code);\n\n            fetch('/api/submit', {\n                method: 'POST',\n                body: JSON.stringify({id: id, studentMsg: msg}),\n                headers: {\n                    'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(res => {\n                if (res.status === 200) {\n                    return res.json();\n                } else {\n                    const error = new Error(res.error);\n                    throw error;\n                }\n            })\n            .then(data => {\n                this.setState({problemComplete: true});\n            }) \n            .catch(err => {\n                console.error(err);\n                alert('Error logging in please try again');\n            });\n        }\n        else {\n            alert(\"Run your code first!\");\n        }\n    }\n\n\n    onChangeCode = (e) => {\n\n        var curr = this.state.currentProblem;\n        curr.code = e;\n        this.setState({currentProblem: curr, canSubmit: this.state.runcount > 0});\n    }\n\n    onPassword = (e) => {\n        this.setState({password:e.target.value});\n    }\n\n    onChangeTitle = (e) => {\n        var curr = this.state.currentProblem;\n        curr.name = e.target.value;\n\n        this.setState({currentProblem: curr});\n\n    }\n\n    onChangeDescription = (e) => {\n        var curr = this.state.currentProblem;\n        curr.description = e.target.value;\n\n        this.setState({currentProblem: curr});\n    }\n\n    onChangeConsole = (e) => {\n        console.log(e);\n        this.setState({output: e})\n    }\n\n    runCode = (id) => {\n        var code = escape(this.state.currentProblem.code);\n        var endTime = new Date();\n        var timeDiff = endTime - this.state.time; //in ms\n        // strip the ms\n        timeDiff /= 1000;\n\n        // get seconds \n        var seconds = Math.round(timeDiff);\n\n        this.setState({canSubmit: true, runcount: this.state.runcount + 1});\n\n        fetch('/api/run', {\n            method: 'POST',\n            body: JSON.stringify({id: id, code:code, elapsedTime: seconds}),\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                return res.json();\n            } else {\n                const error = new Error(res.error);\n                throw error;\n            }\n        })\n        .then(data => {\n            this.setState({output:data.output, currentAttempts: data.attempts});\n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error logging in please try again');\n        });\n    }\n\n    render() {\n        return (\n            <div className='dash'>\n                <div className='sidemenu dash-item'>\n                    <div className=\"problems-header\">Problems</div>\n                    {this.state.problems.map(item=>(\n                        <Button className='problem' \n                                variant={this.state.active!=item.id ? \"outline-dark\" : \"dark\"} \n                                key={item.id}\n                                disabled={this.state.active!=item.id ? false : true}\n                                onClick={() => {this.chooseProblem(item.id, item.name, item.description, item.code, item.defaultOutput, false)}}>\n                            {item.name}\n                        </Button>\n                    ))}\n\n                    {this.state.isAdmin ? \n                        <Button className='problem' \n                                variant={this.state.active!=\"create-problem-button\" ? \"outline-danger\" : \"danger\"} \n                                key={'create-problem-button'}\n                                disabled={this.state.active!=\"create-problem-button\"? false : true}\n                                onClick={() => {this.chooseProblem(\"create-problem-button\",\n                                '', '', '', '', true)}}>\n                            Add Problem\n                        </Button>\n                        : <span></span>\n                    }\n                </div>\n                <div className='dash-content dash-item'>\n                    <div className=\"dash-content-item editor-container\">\n                        <div className='problem-status'>\n\n                            <div className='status-item'> \n                                {this.state.problemComplete ?\n                                    <Badge pill variant=\"success\">Complete</Badge>\n                                :\n                                    <Badge pill variant=\"warning\">Incomplete</Badge>\n                                }\n                            </div>\n                            <div className='status-item'><Badge variant=\"light\">Attempts <Badge variant=\"dark\">{this.state.currentAttempts}</Badge></Badge></div>\n                        \n                        </div>\n                        <AceEditor\n                            placeholder=\"Enter python code\"\n                            mode=\"python\"\n                            theme=\"github\"\n                            name=\"editor\"\n                            className=\"editor\"\n                            onLoad={this.onLoad}\n                            onChange={this.onChangeCode}\n                            fontSize={14}\n                            showPrintMargin={true}\n                            showGutter={true}\n                            highlightActiveLine={true}\n                            value={this.state.currentProblem.code}\n                            height='95%'\n                            width='99%'\n                            wrapEnabled={true}\n                            setOptions={{\n                                enableBasicAutocompletion: true,\n                                enableLiveAutocompletion: true,\n                                enableSnippets: true,\n                                showLineNumbers: true,\n                                tabSize: 4,\n                                readOnly: this.state.active === ''\n                            }}\n                            key={this.state.active + \"-editor\"}\n                        />\n                    </div>\n                    <div className=\"dash-content-item right-side\">\n                        <div className=\"problem-info\">\n                            {this.state.isAdmin && this.state.creatingProblem ?\n                                <Form.Control className='title' type=\"text\" placeholder=\"Enter problem title\" onChange={this.onChangeTitle}/>\n                            :\n                                <div className='title'>\n                                    {this.state.currentProblem.name}\n                                </div>\n                            }\n\n                            {this.state.isAdmin && this.state.creatingProblem  ?   \n                                <Form.Control className='description' as=\"textarea\" rows=\"3\" onChange={this.onChangeDescription}/>\n                            :\n                                <div className='description'>\n                                    {this.state.currentProblem.description}\n                                </div>\n                            }\n                            \n                        </div>\n                        <div className=\"console\">\n                            <AceEditor\n                                placeholder=\"\"\n                                mode=\"xml\"\n                                theme=\"github\"\n                                name=\"console\"\n                                className='console-editor'\n                                onLoad={this.onLoad}\n                                onChange={this.onChangeConsole}\n                                fontSize={12}\n                                showPrintMargin={false}\n                                showGutter={true}\n                                highlightActiveLine={false}\n                                value={this.state.output}\n                                height='100%'\n                                width='100%'\n                                wrapEnabled={true}\n                                setOptions={{\n                                    enableBasicAutocompletion: false,\n                                    enableLiveAutocompletion: false,\n                                    enableSnippets: false,\n                                    showLineNumbers: false,\n                                    tabSize: 2,\n                                    readOnly: !this.state.creatingProblem\n                                }}\n                            />\n                        </div>\n\n                        <Button className='problem' \n                                variant=\"danger\" \n                                onClick={() => {this.runCode(this.state.active)}}\n                                disabled={this.state.active === ''}>\n                            Run Code\n                        </Button>\n\n                        {this.state.isAdmin && this.state.creatingProblem ?\n                            <Button className='problem' \n                                    variant=\"success\" \n                                    onClick={() => {this.createProblem()}}\n                                    disabled={this.state.active === ''}>\n                                Submit Problem\n                            </Button>\n                        :\n                            <Button className='problem' \n                                    variant=\"primary\" \n                                    onClick={() => {this.submitCode(this.state.active)}}\n                                    disabled={this.state.active === '' && this.state.canSubmit == false}>\n                                Submit\n                            </Button>\n                        }\n\n                        {this.state.isAdmin && !this.state.creatingProblem ?\n                                <Button className='problem' \n                                        variant=\"dark\" \n                                        onClick={() => {this.deleteProblem(this.state.active)}}\n                                        disabled={this.state.active === ''}>\n                                    Delete Problem\n                                </Button>\n                        :\n                            <span></span>\n                        }\n                    </div>\n                    \n                </div>\n            </div>\n        );\n      }\n    \n}\n\nexport default withRouter(Dashboard);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport \"./style/Home.css\";\n\nimport Landing from '../pages/Landing';\nimport Dashboard from '../pages/Dashboard';\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            msg: \"\",\n            isLoggedIn:false,\n            loading:true,\n            firstname: '',\n            lastname: '',\n            isAdmin: '',\n            parentSet: false\n        };\n    }\n\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    componentDidMount() {\n        fetch('/api/checkToken', {\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                this.setState({\n                    msg: \"USER LOGGED IN!\",\n                    isLoggedIn:true,\n                    loading:false\n                });\n                //return res.body();\n                return res.json();\n            } else {\n                this.setState({\n                    msg: \"PLEASE LOGIN FIRST.\",\n                    isLoggedIn:false,\n                    loading:false\n                });\n            }\n        })\n        .then(data => {\n            console.log(data);\n            if (data) {\n                //console.log(data);\n                this.setState({\n                    firstname: data.firstname,\n                    lastname: data.lastname\n                });\n                this.setState({isAdmin: data.isAdmin});\n            }\n            \n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n        \n    }\n\n    componentDidUpdate() {\n        \n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n    }\n\n    render() {\n\n        var page = (<div>LOADING...</div>);\n        page = this.state.loading ? page: !this.state.isLoggedIn ? <Landing /> : <Dashboard />;\n        \n        return (\n            page\n        );\n      }\n    \n}\n\nexport default withRouter(Home);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport \"./style/Home.css\";\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            user : '',\n            password: '',\n            isLoggedIn: false\n        };\n    }\n\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        fetch('/api/signin', {\n            method: 'POST',\n            body: JSON.stringify(this.state),\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                this.props.login();\n                this.props.history.push('/');\n                return res.json();\n            } else {\n                console.log(res);\n                const error = new Error(res.error);\n                throw error;\n            }\n        })\n        .then(data => {\n            this.props.setName(data);\n            this.props.setAdmin(data.isAdmin);\n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error logging in please try again');\n        });\n    }\n\n    componentDidMount() {\n        fetch('/api/checkToken', {\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                this.setState({\n                    isLoggedIn:true\n                });\n                return res.json();\n            } else {\n                this.setState({\n                    isLoggedIn:false\n                });\n            }\n        })\n        .then(data => {\n            console.log(data);\n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n        \n    }\n\n    render() {\n        var loginForm = (<form onSubmit={this.onSubmit}>\n            <h1>Login Below!</h1>\n            <input\n                type=\"text\"\n                name=\"user\"\n                placeholder=\"Email or Username\"\n                value={this.state.user}\n                onChange={this.handleInputChange}\n                required\n            />\n            <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Enter password\"\n                value={this.state.password}\n                onChange={this.handleInputChange}\n                required\n            />\n            <input type=\"submit\" value=\"Submit\"/>\n        </form>);\n        var page = this.state.isLoggedIn ? this.props.history.push('/') : loginForm;\n        return (\n            page\n        );\n      }\n    \n}\n\nexport default withRouter(Login);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport \"./style/Home.css\";\n\nclass Registration extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            email : '',\n            username : '',\n            password: '',\n            firstname: '',\n            lastname: '',\n            type: 0,\n            isLoggedIn: false\n        };\n    }\n\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        fetch('/api/signup', {\n            method: 'POST',\n            body: JSON.stringify(this.state),\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n\n                this.props.login();\n                this.props.history.push('/');\n                return res.json();\n            } else {\n                const error = new Error(res.error);\n                throw error;\n            }\n        })\n        .then(data => {\n            this.props.setName(data);\n            this.props.setAdmin(data.isAdmin);\n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error logging in please try again');\n        });\n    }\n\n    componentDidMount() {\n        fetch('/api/checkToken', {\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                this.setState({\n                    isLoggedIn:true\n                });\n            } else {\n                this.setState({\n                    isLoggedIn:false\n                });\n            }\n        })\n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n        \n    }\n\n    render() {\n        var loginForm = (<form onSubmit={this.onSubmit}>\n            <h1>Login Below!</h1>\n            <input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                value={this.state.email}\n                onChange={this.handleInputChange}\n                required\n            />\n            <input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"Username\"\n                value={this.state.username}\n                onChange={this.handleInputChange}\n                required\n            />\n            <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Enter password\"\n                value={this.state.password}\n                onChange={this.handleInputChange}\n                required\n            />\n            <input\n                type=\"text\"\n                name=\"firstname\"\n                placeholder=\"First Name\"\n                value={this.state.firstname}\n                onChange={this.handleInputChange}\n                required\n            />\n            <input\n                type=\"text\"\n                name=\"lastname\"\n                placeholder=\"Last Name\"\n                value={this.state.lastname}\n                onChange={this.handleInputChange}\n                required\n            />\n\n            <select name='type' value={this.state.type} onChange={this.handleInputChange}>\n                <option value={0}>0</option>\n                <option value={1}>1</option>\n                <option value={2}>2</option>\n            </select>\n            <input type=\"submit\" value=\"Submit\"/>\n        </form>);\n        var page = this.state.isLoggedIn ? this.props.history.push('/') : loginForm;\n        return (\n            page\n        );\n      }\n    \n}\n\nexport default withRouter(Registration);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport \"./style/Home.css\";\n\nclass Logout extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            email : '',\n            password: '',\n            isLoggedIn: false\n        };\n    }\n\n    handleInputChange = (event) => {\n        const { value, name } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault();\n    }\n\n    componentDidMount() {\n        document.cookie = \"token=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/;\"\n        fetch('/api/signout', {\n            method: 'POST',\n            body: JSON.stringify(this.state),\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                this.setState({\n                    isLoggedIn:false\n                });\n                this.props.logout();\n                this.props.setName({firstname:'', lastname:''});\n                this.props.setAdmin(false);\n                this.props.history.push('/');\n            } else {\n                this.setState({\n                    isLoggedIn:true\n                });\n            }\n        })\n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n    }\n\n    render() {\n        \n        return (\n            <div>Logged out!</div>\n        );\n      }\n    \n}\n\nexport default withRouter(Logout);","import React, { Component } from \"react\";\nimport { Link, Route, Switch, BrowserRouter } from 'react-router-dom';\nimport \"../../pages/style/Home.css\";\n\nimport Home from '../../pages/Home';\nimport Login from '../../pages/Login';\nimport Registration from '../../pages/Registration';\nimport Logout from '../../pages/Logout';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            isAdmin: false,\n            items: {},\n            isLoggedIn:false,\n            firstname: '',\n            lastname: '',\n            refreshed: true\n        };\n\n        this.login = this.login.bind(this);\n        this.logout = this.logout.bind(this);\n        this.setName = this.setName.bind(this);\n        this.setAdmin = this.setAdmin.bind(this);\n    }\n\n    login() {\n        this.setState({isLoggedIn: true});\n    }\n\n    logout() {\n        this.setState({isLoggedIn: false});\n    }\n\n    setName(name) {\n        this.setState(name);\n    }\n\n    setAdmin(isAdmin) {\n        this.setState({isAdmin: isAdmin});\n    }\n\n    componentDidMount() {\n        fetch('/api/checkToken', {\n            headers: {\n                'Accept': 'application/json, text/plain, */*',  // It can be used to overcome cors errors\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(res => {\n            if (res.status === 200) {\n                this.setState({\n                    msg: \"USER LOGGED IN!\",\n                    isLoggedIn:true,\n                    loading:false\n                });\n                return res.json();\n            } else {\n                this.setState({\n                    msg: \"PLEASE LOGIN FIRST.\",\n                    isLoggedIn:false,\n                    loading:false\n                });\n            }\n        })\n        .then(data => {\n            if (data) {\n                //console.log(data);\n                this.setState({\n                    firstname: data.firstname,\n                    lastname: data.lastname\n                });\n                this.setState({isAdmin: data.isAdmin});\n            }\n            \n        }) \n        .catch(err => {\n            console.error(err);\n            alert('Error checking token');\n        });\n        \n    }\n\n    render() {\n        var loginButton = this.state.isLoggedIn ? (<div className='nav-item'><Link to=\"/logout\">Logout</Link></div>) : (<div><div className='nav-item'><Link to=\"/login\">Login</Link></div><div className='nav-item'><Link to=\"/register\">Register</Link></div></div>);\n\n        return (\n            <BrowserRouter>\n                <div className='container'>\n                    <div className='nav'>\n                        <div className='logo'>LOGO</div>\n                        <div className='nav-cont'>\n                            {this.state.isAdmin ?\n                                <div className='admin-tag'>A</div>\n                            :\n                                <span></span>\n                            }\n                            <div className='firstname'>{this.state.firstname}</div>\n                            <div className='lastname'>{this.state.lastname}</div>\n                            <div className='nav-item'><Link to=\"/\">Home</Link></div>\n                            {loginButton}\n                        </div>\n                    </div>\n                    <div className='content'>\n                        <Switch>\n                            <Route exact path=\"/\" component={() => <Home login={this.login} logout={this.logout} setName={this.setName} setAdmin={this.setAdmin}/>} />\n                            <Route exact path=\"/login\" component={() => <Login login={this.login} logout={this.logout}  setName={this.setName} setAdmin={this.setAdmin}/>} />\n                            <Route exact path=\"/logout\" component={() => <Logout login={this.login} logout={this.logout}  setName={this.setName} setAdmin={this.setAdmin}/>} />\n                            <Route exact path=\"/register\" component={() => <Registration login={this.login} logout={this.logout} setName={this.setName} setAdmin={this.setAdmin}/>} />\n                        </Switch>\n                    </div>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}